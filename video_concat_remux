#!/usr/bin/env bash

set -o pipefail

# Find input files and add them to array
files=()
example_name=
for f in "$@"; do
    if [ -f "$f" ]; then
        # Add file
        file=$(readlink -f "$f")
        echo "+ $file"
        files+=("$f")
    elif [ -d "$f" ]; then
        # Add files in directory
        echo "D $f..."
        if [ -z "$example_name" ]; then
            example_name=$(basename "$f")
        fi
        while read -r -d $'\0' file
        do
            # Add file
            file=$(readlink -f "$file")
            echo "+ $file"
            files+=("$file")
        done < <(find "$f" -maxdepth 1 -type f -iregex '.*\.\(mpg\|mov\|avi\|mp4\)' -print0 | sort -z)

    fi
done
count=${#files[@]}
echo "# $count"
if [ $count -eq 0 ]; then
    exit 0
fi

# Destination directory
dir="$HOME/tmp"
if ! [[ -d "$dir" ]]; then
    dir=$PWD
fi

# Generate target file name
first_file=$files[0]
first_file=$(basename "${first_file}")
random_str=$(cat /dev/urandom | tr -cd 'a-f0-9' | head -c 16)
target_file=$(echo "${first_file%.*} ${random_str}").mkv
target_file=$(echo "$target_file" | tr ' ' '_')
if [ -n "$example_name" ]; then
    target_file="$example_name $target_file"
fi
target_file=$(echo "$target_file" | tr ' ' '_')
# full file path
target_file_name=$(basename "${target_file}")
target_file="${dir}/${target_file}"
if [ -e "$target_file" ]; then
    zenity --error --text "Target file exists: $target_file"
    exit 1
fi

# Ask for confirmation
zenity --question --text "Create target file: $target_file_name\nIn: $dir\nOK?"
if [[ $? -ne 0 ]]; then
    exit 0
fi

# Create temp files
tmp_dir=/tmp
home_tmp="$HOME/tmp"
[[ -d "$home_tmp" && -x "$home_tmp" && -w "$home_tmp" ]] && tmp_dir=$home_tmp
list_file=$(mktemp ${tmp_dir}/video-concat.tmp.XXXXXX)
if ! truncate -s 0 "$list_file" &>/dev/null; then
    zenity --error --text "Failed to create temporary file: $list_file"
    exit 1
fi
output_file=$(mktemp ${tmp_dir}/video-concat.tmp.XXXXXX)
if ! truncate -s 0 "$output_file" &>/dev/null; then
    zenity --error --text "Failed to create temporary file: $output_file"
    exit 1
fi

# Write file list to temp file
for f in "${files[@]}"; do
    echo "file '$f'" >>"$list_file"
done

# Input, filter arguments for source files
input_args=()
filter_inputs=""
n=${#files[@]}
for i in "${!files[@]}"; do
    input_args+=("-i" "${files[$i]}")
    filter_inputs+="[$i:v:0]"
done
# Build filter string
filter_complex="${filter_inputs}concat=n=${n}:v=1[outv]"

# Codec option
codec_option=
# check if x265 is installed?
ld_out=$(ldconfig -p)
if grep -wq libx265 <<<"$ld_out"; then
    codec_option="-c:v libx265"
fi

# Ask ffmpeg to concat/combine/merge input files
zenity --info --text "Saving output in: $output_file"
echo "ffmpeg -fflags +discardcorrupt+genpts -err_detect ignore_err \
${input_args[@]} \
-filter_complex $filter_complex -map [outv] \
-vsync vfr -c:v libx265 -crf 28 $target_file"

ffmpeg -fflags "+discardcorrupt+genpts" -err_detect ignore_err \
"${input_args[@]}" \
-filter_complex "$filter_complex" -map "[outv]" \
-vsync vfr -c:v libx265 -crf 28 "$target_file"

code=$?
if [ $code -eq 0 ]; then
    zenity --info --text "Done: $target_file"
    rm "$list_file"
    rm "$output_file"
else
    zenity --error --text "Error: $output_file"
    exit 1
fi



