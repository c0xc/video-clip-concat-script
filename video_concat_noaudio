#!/usr/bin/env bash

set -o pipefail

# Find input files and add them to array
files=()
example_name=
for f in "$@"; do
    if [ -f "$f" ]; then
        # Add file
        file=$(readlink -f "$f")
        echo "+ $file"
        files+=("$f")
    elif [ -d "$f" ]; then
        # Add files in directory
        echo "D $f..."
        if [ -z "$example_name" ]; then
            example_name=$(basename "$f")
        fi
        while read -r -d $'\0' file
        do
            # Add file
            file=$(readlink -f "$file")
            echo "+ $file"
            files+=("$file")
        done < <(find "$f" -maxdepth 1 -type f -iregex '.*\.\(mpg\|mov\|avi\|mp4\)' -print0 | sort -z)
    fi
done
count=${#files[@]}
echo "# $count"
if [ $count -eq 0 ]; then
    exit 0
fi

# Check files, determine container format
auto_container=
for i in ${!files[@]}; do
    file="${files[i]}"
    ext="${file##*.}"
    if [[ -z "$auto_container" ]]; then
        # Remember file extension from first file
        auto_container="$ext"
    elif [[ "$auto_container" != "$ext" ]]; then
        # Current file has a different extension than previous one
        auto_container=
    fi
done
if [[ -n "$auto_container" && -z "$CONTAINER" ]]; then
    CONTAINER="${auto_container,,}"
fi

# Destination directory
dir="$HOME/tmp"
if ! [[ -d "$dir" ]]; then
    dir=$PWD
fi

# Generate target file name
if ! [[ "$CONTAINER" =~ ^[a-z0-9]{3}$ ]]; then
    CONTAINER=mkv
fi
# auto-determine container from input files to allow fast copy
target_file=$(cat /dev/urandom | tr -cd 'a-f0-9' | head -c 32).$CONTAINER
if [ -n "$example_name" ]; then
    example_name=$(echo "$example_name" | tr ' ' '_')
    target_file="${example_name}_${target_file}"
fi
target_file=$(echo "$target_file" | tr ' ' '_')
# full file path
target_file_name=$(basename "${target_file}")
target_file="${dir}/${target_file}"
if [ -e "$target_file" ]; then
    zenity --error --text "Target file exists: $target_file"
    exit 1
fi

# Ask for confirmation
zenity --question --text "Create target file: $target_file_name\nIn: $dir\nOK?"
if [[ $? -ne 0 ]]; then
    exit 0
fi

# Create temp files
list_file=$(mktemp "$dir/video-concat.tmp.XXXXXX")
if ! truncate -s 0 "$list_file" &>/dev/null; then
    zenity --error --text "Failed to create temporary file: $list_file"
    exit 1
fi
output_file=$(mktemp "$dir/video-concat.tmp.XXXXXX")
if ! truncate -s 0 "$output_file" &>/dev/null; then
    zenity --error --text "Failed to create temporary file: $output_file"
    exit 1
fi

# Write file list to temp file
for f in "${files[@]}"; do
    echo "file '$f'" >>"$list_file"
done

# Ask ffmpeg to concat/combine/merge input files
zenity --info --text "Saving output in: $output_file"
echo "ffmpeg -safe 0 -f concat -an -i $list_file -c copy $target_file"
ffmpeg -safe 0 -f concat -an -i "$list_file" -c copy "$target_file" 2>&1 | tee "$output_file"
code=$?
if [ $code -eq 0 ]; then
    zenity --info --text "Done: $target_file"
    #rm "$list_file"
    #rm "$output_file"
else
    zenity --error --text "Error: $output_file"
    exit 1
fi



